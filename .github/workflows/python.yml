---
name: CI

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1
  test:
    strategy:
      matrix:
        python: ['3.10', '3.11']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ matrix.os }}-poetry
      - name: Install latest version of Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
      - run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - run: poetry --version
      - run: poetry check --no-interaction
      - id: cache-deps
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.venv
          key: ${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ matrix.os }}-
      - name: Install deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Run pytest
        run: poetry run pytest -v --cov=nixie
      - name: Build artifacts
        run: poetry build
